openapi: 3.1.3

info:
  title: traQ gazer
  description: |-
    部内連絡ツール traQ において登録された単語の通知を行うサービス
  version: 2.0.0

servers:
  - url: /api

tags:
  - name: words
    description: 単語の閲覧・追加・削除
  - name: stamps
    description: スタンプの閲覧・追加・削除

paths:
  /words:
    post:
      tags:
        - words
      summary: 単語の登録
      description: 同時に通知の設定もする
      parameters:
        - $ref: '#/components/parameters/NeoShowcase'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewWord'
      responses:
        '200':
          description: Successful registration
        '400':
          description: Invalid input

  /words/{wordId}:
    parameters:
      - $ref: '#/components/parameters/WordId'
      - $ref: '#/components/parameters/NeoShowcase'
    put:
      tags:
        - words
      summary: 通知除外者の設定
      description: 通知しない投稿者を指定する
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExcludedUsers'
      responses:
        '200':
          description: Successful edit
        '404':
          description: Not found
    delete:
      tags:
        - words
      summary: 単語の削除
      description: 自分が登録した単語を削除できる。ない場合は404
      responses:
        '200':
          description: Successful deletion
        '404':
          description: Not found

  /words/me:
    parameters:
      - $ref: '#/components/parameters/NeoShowcase'
    get:
      tags:
        - words
      summary: 自分の登録単語の閲覧
      description: 自分が登録している単語を、通知情報とともに閲覧する
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MyWords'
        '400':
          description: Invalid input

  /stamps:
    get:
      tags:
        - stamps
      summary: 全ユーザーの登録スタンプの閲覧
      description: |
        自分に限らず全ユーザーの登録しているスタンプを見ることができる
        クエリパラメータで特定のスタンプの登録者や特定ユーザーの登録スタンプを見ることも可能
      parameters:
        - name: stampName
          in: query
          required: false
          schema:
            type: string
            example: "デジタル創作同好会traP"
          style: form
        - name: trapId
          in: query
          required: false
          schema:
            type: string
            example: "デジタル創作同好会traP"
          style: form
      responses:
        '200':
          description: Successful retrieval
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stamps'
    post:
      tags:
        - stamps
      summary: スタンプの登録
      description: 同時に通知の設定もする
      parameters:
        - $ref: '#/components/parameters/NeoShowcase'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewStamp'
      responses:
        '200':
          description: Successful registration
        '400':
          description: Invalid input

components:
  schemas:
    NewWord:
      type: object
      description: sessionからuserIdを取る
      properties:
        word:
          type: string
        excludedUsers:
          $ref: '#/components/schemas/ExcludedUsers'
      required:
        - word
        - excludedUsers
    ExcludedUsers:
      type: array
      items:
        $ref: '#/components/schemas/ExcludedUser'
    ExcludedUser:
      type: object
      properties:
        trapId:
          type: string
          example: "trap"
      required:
        - trapId
    
    MyWords:
      type: array
      items:
        $ref: '#/components/schemas/MyWord'
    MyWord:
      type: object
      properties:
        word:
          type: string
        id:
          type: string
          format: uuid
        time:
          type: string
          format: date-time
        excludedUsers:
          $ref: '#/components/schemas/ExcludedUsers'
      required:
        - word
        - id
        - time
        - excludedUsers
    
    NewStamp:
      type: object
      description: sessionからuserIdを取る
      properties:
        stamp:
          type: string
        excludedUsers:
          $ref: '#/components/schemas/ExcludedUsers'
      required:
        - stamp
        - excludedUsers
    
    MyStamps:
      type: array
      items:
        $ref: '#/components/schemas/MyStamp'
    MyStamp:
      type: object
      properties:
        name:
          type: string
        id:
          type: string
          format: uuid
        time:
          type: string
          format: date-time
        excludedUsers:
          $ref: '#/components/schemas/ExcludedUsers'
      required:
        - name
        - id
        - time
        - excludedUsers
    
    Stamps:
      type: array
      items:
        $ref: '#/components/schemas/Word'
    Stamp:
      type: object
      properties:
        trapId:
          type: string
        name:
          type: string
      required:
        - trapId
        - name

  parameters:
    WordId:
      in: path
      name: wordId
      description: 単語の uuid で指定する
      schema:
        type: string
        format: uuid
      required: true
    NeoShowcase:
      in: header
      name: X-Forwarded-User
      description: traP ID を取得するためのヘッダー
      schema:
        type: string
      required: true
